{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport _slicedToArray from \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\endurance-sample\\\\srabonti-sample-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\endurance-sample\\\\srabonti-sample-ui\\\\src\\\\components\\\\private\\\\PetList\\\\PetList.js\";\n\nimport * as React from 'react';\nimport { useEffect, useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport useApi from '../../../hooks/useApi';\nimport * as PortalConstants from \"../../../utility/constants\";\nimport { Link } from 'react-router-dom';\nimport ErrorSummary from '../../common/ErrorComponents/ErrorSummary';\nimport './PetList.less';\n\nvar PetList = function PetList(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var fetchApiPath = \"doggos-list\";\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openAddEditModal = _useState4[0],\n      setOpenAddEditModal = _useState4[1];\n\n  var _useApi = useApi(fetchApiPath, null, PortalConstants.APIMETHODS.GET),\n      _useApi2 = _slicedToArray(_useApi, 2),\n      petlistsFetchResponse = _useApi2[0],\n      petlistsFetchRequest = _useApi2[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petlistData = _useState6[0],\n      setPetlistData = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showError = _useState8[0],\n      setShowError = _useState8[1];\n\n  useEffect(function () {\n    if (petlistData === null && !loading && !petlistsFetchResponse.isLoading && petlistsFetchResponse.hasError === false) {\n      setLoading(true);\n      petlistsFetchRequest(null, PortalConstants.APIMETHODS.GET, fetchApiPath);\n    }\n  });\n  useEffect(function () {\n    setLoading(false);\n\n    if (petlistsFetchResponse.data && !petlistsFetchResponse.error && !petlistsFetchResponse.isLoading && !petlistsFetchResponse.hasError) {\n      setPetlistData(petlistsFetchResponse.data.doggos);\n    } else if (petlistsFetchResponse.error && !petlistsFetchResponse.data && !petlistsFetchResponse.isLoading) {\n      setShowError(true);\n    }\n  }, [petlistsFetchResponse]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Spin, {\n    spinning: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Pets\"), petlistData && petlistData !== null && loading === false && /*#__PURE__*/React.createElement(_List, {\n    grid: {\n      gutter: 16,\n      column: 4\n    },\n    dataSource: petlistData,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Card, {\n        title: item.name,\n        extra: /*#__PURE__*/React.createElement(Link, {\n          to: \"/home/petdetails/\" + item.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 48\n          }\n        }, \" View Detiail\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, item.breed)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), petlistsFetchResponse.hasError && showError && /*#__PURE__*/React.createElement(ErrorSummary, {\n    error: petlistsFetchResponse.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }\n  })));\n};\n\nexport default withRouter(PetList);","map":{"version":3,"sources":["C:/Users/PIONEER/Documents/projects/endurance-sample/srabonti-sample-ui/src/components/private/PetList/PetList.js"],"names":["React","useEffect","useContext","useState","useLocation","withRouter","useApi","PortalConstants","Link","ErrorSummary","PetList","props","loading","setLoading","fetchApiPath","openAddEditModal","setOpenAddEditModal","APIMETHODS","GET","petlistsFetchResponse","petlistsFetchRequest","petlistData","setPetlistData","showError","setShowError","isLoading","hasError","data","error","doggos","gutter","column","item","name","id","breed"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useEffect, useContext, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { List, Card, Spin, Modal } from 'antd'; \r\nimport { withRouter } from \"react-router\";  \r\nimport useApi from '../../../hooks/useApi'; \r\nimport * as PortalConstants from \"../../../utility/constants\"; \r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ErrorSummary from '../../common/ErrorComponents/ErrorSummary';\r\nimport './PetList.less'\r\n \r\nconst PetList = (props) => { \r\n   \r\n    const [loading, setLoading] = useState(false);\r\n    let fetchApiPath= \"doggos-list\";\r\n\r\n    const [openAddEditModal, setOpenAddEditModal] = useState(false);\r\n    \r\n    const  [petlistsFetchResponse, petlistsFetchRequest] = useApi(fetchApiPath, null,PortalConstants.APIMETHODS.GET);\r\n    const [petlistData , setPetlistData] =useState(null);\r\n    const [showError, setShowError] = useState(false);\r\n    useEffect(() => {\r\n        if(petlistData === null && !loading && !petlistsFetchResponse.isLoading && petlistsFetchResponse.hasError === false){\r\n            setLoading(true);\r\n            petlistsFetchRequest(null,PortalConstants.APIMETHODS.GET,fetchApiPath);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        if(petlistsFetchResponse.data && !petlistsFetchResponse.error && !petlistsFetchResponse.isLoading && !petlistsFetchResponse.hasError){\r\n          setPetlistData(petlistsFetchResponse.data.doggos);\r\n        }\r\n        else if(petlistsFetchResponse.error && !petlistsFetchResponse.data && !petlistsFetchResponse.isLoading){\r\n          setShowError(true);\r\n        }\r\n      }, [petlistsFetchResponse]);\r\n     \r\n\r\n    return (\r\n        <>\r\n        <Spin spinning={loading}>\r\n            <h2>\r\n                Pets  \r\n            </h2>\r\n            {petlistData && petlistData!==null && loading === false &&\r\n            <List\r\n            grid={{ gutter: 16, column: 4 }}\r\n            dataSource={petlistData}\r\n            renderItem={item => (\r\n            <List.Item>\r\n                <Card title={item.name} extra={<Link to={\"/home/petdetails/\"+item.id}> View Detiail</Link>}>\r\n                    <>\r\n                    {item.breed}\r\n                  \r\n                </>\r\n                \r\n                </Card>\r\n            </List.Item>\r\n            )}\r\n            \r\n            \r\n            />\r\n            }\r\n\r\n            {petlistsFetchResponse.hasError && showError  &&\r\n             <ErrorSummary error={petlistsFetchResponse.error} />\r\n            }\r\n         </Spin>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default withRouter(PetList);"]},"metadata":{},"sourceType":"module"}