{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/descriptions/style\";\nimport _Descriptions from \"antd/es/descriptions\";\nimport _slicedToArray from \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\endurance-sample\\\\srabonti-sample-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\endurance-sample\\\\srabonti-sample-ui\\\\src\\\\components\\\\private\\\\PetList\\\\PetList.js\";\n\nimport * as React from 'react';\nimport { useEffect, useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport UserContext from '../../../context/UserContext';\nimport useApi from '../../../hooks/useApi';\nimport * as PortalConstants from \"../../../utility/constants\";\nimport ErrorSummary from '../../common/ErrorComponents/ErrorSummary';\nimport './PetList.less';\n\nvar PetList = function PetList(props) {\n  var user = useContext(UserContext);\n  var Meta = _Card.Meta;\n  var location = useLocation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var fetchApiPath = \"playlists/users/\";\n\n  if (location && location.state && location.state.userInfo) {\n    fetchApiPath += location.state.userInfo.id;\n  }\n\n  var _useApi = useApi(fetchApiPath, null, PortalConstants.APIMETHODS.GET),\n      _useApi2 = _slicedToArray(_useApi, 2),\n      petlistsFetchResponse = _useApi2[0],\n      petlistsFetchRequest = _useApi2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      petlistData = _useState4[0],\n      setPlaylistData = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showError = _useState6[0],\n      setShowError = _useState6[1];\n\n  useEffect(function () {\n    if (petlistData === null && !loading && !petlistsFetchResponse.isLoading && petlistsFetchResponse.hasError === false) {\n      setLoading(true);\n      petlistsFetchRequest(null, PortalConstants.APIMETHODS.GET, fetchApiPath);\n    }\n  });\n  useEffect(function () {\n    setLoading(false);\n\n    if (petlistsFetchResponse.data && !petlistsFetchResponse.error && !petlistsFetchResponse.isLoading && !petlistsFetchResponse.hasError) {\n      setPlaylistData(playlistsFetchResponse.data);\n    } else if (petlistsFetchResponse.error && !petlistsFetchResponse.data && !petlistsFetchResponse.isLoading) {\n      setShowError(true);\n    }\n  }, [petlistsFetchResponse]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Spin, {\n    spinning: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Pets\"), playlistData && playlistData !== null && loading === false && /*#__PURE__*/React.createElement(_List, {\n    grid: {\n      gutter: 16,\n      column: 4\n    },\n    dataSource: playlistData,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Card, {\n        title: item.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, item.description, /*#__PURE__*/React.createElement(_Descriptions, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(_Descriptions.Item, {\n        label: \"Song Count\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, item.songSet.length)), /*#__PURE__*/React.createElement(_List, {\n        dataSource: item.songSet,\n        pagination: {\n          pageSize: 2\n        },\n        renderItem: function renderItem(songItem) {\n          return /*#__PURE__*/React.createElement(_List.Item, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(_Descriptions, {\n            style: {\n              marginBottom: \"-25px !important\"\n            },\n            title: songItem.name,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(_Descriptions.Item, {\n            style: {\n              marginTop: \"-25px !important\"\n            },\n            label: \"Artist\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 45\n            }\n          }, songItem.artist), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n            label: \"Album\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }\n          }, songItem.album), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n            label: \"Genre\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 45\n            }\n          }, songItem.genre), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n            label: \"Year\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 45\n            }\n          }, \" \", songItem.year)));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), playlistsFetchResponse.hasError && showError && /*#__PURE__*/React.createElement(ErrorSummary, {\n    error: playlistsFetchResponse.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }\n  })));\n};\n\nexport default withRouter(PetList);","map":{"version":3,"sources":["C:/Users/PIONEER/Documents/projects/endurance-sample/srabonti-sample-ui/src/components/private/PetList/PetList.js"],"names":["React","useEffect","useContext","useState","useLocation","withRouter","UserContext","useApi","PortalConstants","ErrorSummary","PetList","props","user","Meta","location","loading","setLoading","fetchApiPath","state","userInfo","id","APIMETHODS","GET","petlistsFetchResponse","petlistsFetchRequest","petlistData","setPlaylistData","showError","setShowError","isLoading","hasError","data","error","playlistsFetchResponse","playlistData","gutter","column","item","name","description","songSet","length","pageSize","songItem","marginBottom","marginTop","artist","album","genre","year"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAO,KAAKC,eAAZ,MAAiC,4BAAjC;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAO,gBAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAEvB,MAAMC,IAAI,GAAGV,UAAU,CAACI,WAAD,CAAvB;AACA,MAAMO,IAAI,GAAG,MAAKA,IAAlB;AACA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAJuB,kBAKOD,QAAQ,CAAC,KAAD,CALf;AAAA;AAAA,MAKhBY,OALgB;AAAA,MAKPC,UALO;;AAMvB,MAAIC,YAAY,GAAE,kBAAlB;;AACA,MAAGH,QAAQ,IAAIA,QAAQ,CAACI,KAArB,IAA8BJ,QAAQ,CAACI,KAAT,CAAeC,QAAhD,EAAyD;AACrDF,IAAAA,YAAY,IAAEH,QAAQ,CAACI,KAAT,CAAeC,QAAf,CAAwBC,EAAtC;AACH;;AATsB,gBAUgCb,MAAM,CAACU,YAAD,EAAe,IAAf,EAAoBT,eAAe,CAACa,UAAhB,CAA2BC,GAA/C,CAVtC;AAAA;AAAA,MAUfC,qBAVe;AAAA,MAUQC,oBAVR;;AAAA,mBAWgBrB,QAAQ,CAAC,IAAD,CAXxB;AAAA;AAAA,MAWhBsB,WAXgB;AAAA,MAWFC,eAXE;;AAAA,mBAYWvB,QAAQ,CAAC,KAAD,CAZnB;AAAA;AAAA,MAYhBwB,SAZgB;AAAA,MAYLC,YAZK;;AAavB3B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGwB,WAAW,KAAK,IAAhB,IAAwB,CAACV,OAAzB,IAAoC,CAACQ,qBAAqB,CAACM,SAA3D,IAAwEN,qBAAqB,CAACO,QAAtB,KAAmC,KAA9G,EAAoH;AAChHd,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,MAAAA,oBAAoB,CAAC,IAAD,EAAMhB,eAAe,CAACa,UAAhB,CAA2BC,GAAjC,EAAqCL,YAArC,CAApB;AACH;AACJ,GALQ,CAAT;AAOAhB,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,QAAGO,qBAAqB,CAACQ,IAAtB,IAA8B,CAACR,qBAAqB,CAACS,KAArD,IAA8D,CAACT,qBAAqB,CAACM,SAArF,IAAkG,CAACN,qBAAqB,CAACO,QAA5H,EAAqI;AACnIJ,MAAAA,eAAe,CAACO,sBAAsB,CAACF,IAAxB,CAAf;AACD,KAFD,MAGK,IAAGR,qBAAqB,CAACS,KAAtB,IAA+B,CAACT,qBAAqB,CAACQ,IAAtD,IAA8D,CAACR,qBAAqB,CAACM,SAAxF,EAAkG;AACrGD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GARM,EAQJ,CAACL,qBAAD,CARI,CAAT;AAWA,sBACI,uDACA;AAAM,IAAA,QAAQ,EAAER,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKmB,YAAY,IAAIA,YAAY,KAAG,IAA/B,IAAuCnB,OAAO,KAAK,KAAnD,iBACD;AACA,IAAA,IAAI,EAAE;AAAEoB,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADN;AAEA,IAAA,UAAU,EAAEF,YAFZ;AAGA,IAAA,UAAU,EAAE,oBAAAG,IAAI;AAAA,0BAChB,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,KAAK,EAAEA,IAAI,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,0CACCD,IAAI,CAACE,WADN,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,kCAAc,IAAd;AAAmB,QAAA,KAAK,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCF,IAAI,CAACG,OAAL,CAAaC,MAApD,CADA,CAFI,eAMJ;AACA,QAAA,UAAU,EAAEJ,IAAI,CAACG,OADjB;AAEA,QAAA,UAAU,EAAE;AAACE,UAAAA,QAAQ,EAAC;AAAV,SAFZ;AAGI,QAAA,UAAU,EAAE,oBAAAC,QAAQ;AAAA,8BACpB,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAc,YAAA,KAAK,EAAE;AAACC,cAAAA,YAAY,EAAC;AAAd,aAArB;AAAwD,YAAA,KAAK,EAAGD,QAAQ,CAACL,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoB,kCAAc,IAAd;AAAmB,YAAA,KAAK,EAAE;AAACO,cAAAA,SAAS,EAAC;AAAX,aAA1B;AAA0D,YAAA,KAAK,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0EF,QAAQ,CAACG,MAAnF,CADpB,eAEoB,kCAAc,IAAd;AAAmB,YAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkCH,QAAQ,CAACI,KAA3C,CAFpB,eAGoB,kCAAc,IAAd;AAAmB,YAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkCJ,QAAQ,CAACK,KAA3C,CAHpB,eAIoB,kCAAc,IAAd;AAAmB,YAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkCL,QAAQ,CAACM,IAA3C,CAJpB,CADJ,CADoB;AAAA,SAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANI,CADJ,CADJ,CADgB;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EA2CKhB,sBAAsB,CAACH,QAAvB,IAAmCH,SAAnC,iBACA,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEM,sBAAsB,CAACD,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CL,CADA,CADJ;AAoDH,CAnFD;;AAoFA,eAAe3B,UAAU,CAACK,OAAD,CAAzB","sourcesContent":["import * as React from 'react';\r\nimport { useEffect, useContext, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Row, List, Card, Spin, Descriptions, Divider } from 'antd'; \r\nimport { withRouter } from \"react-router\"; \r\nimport UserContext from '../../../context/UserContext'; \r\nimport useApi from '../../../hooks/useApi'; \r\nimport * as PortalConstants from \"../../../utility/constants\"; \r\n\r\nimport ErrorSummary from '../../common/ErrorComponents/ErrorSummary';\r\nimport './PetList.less'\r\n \r\nconst PetList = (props) => {\r\n\r\n    const user = useContext(UserContext);\r\n    const Meta = Card.Meta;\r\n    const location = useLocation();\r\n    const [loading, setLoading] = useState(false);\r\n    let fetchApiPath= \"playlists/users/\";\r\n    if(location && location.state && location.state.userInfo){\r\n        fetchApiPath+=location.state.userInfo.id;\r\n    }\r\n    const  [petlistsFetchResponse, petlistsFetchRequest] = useApi(fetchApiPath, null,PortalConstants.APIMETHODS.GET);\r\n    const [petlistData , setPlaylistData] =useState(null);\r\n    const [showError, setShowError] = useState(false);\r\n    useEffect(() => {\r\n        if(petlistData === null && !loading && !petlistsFetchResponse.isLoading && petlistsFetchResponse.hasError === false){\r\n            setLoading(true);\r\n            petlistsFetchRequest(null,PortalConstants.APIMETHODS.GET,fetchApiPath);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        if(petlistsFetchResponse.data && !petlistsFetchResponse.error && !petlistsFetchResponse.isLoading && !petlistsFetchResponse.hasError){\r\n          setPlaylistData(playlistsFetchResponse.data);\r\n        }\r\n        else if(petlistsFetchResponse.error && !petlistsFetchResponse.data && !petlistsFetchResponse.isLoading){\r\n          setShowError(true);\r\n        }\r\n      }, [petlistsFetchResponse]);\r\n     \r\n\r\n    return (\r\n        <>\r\n        <Spin spinning={loading}>\r\n            <h2>\r\n                Pets\r\n            </h2>\r\n            {playlistData && playlistData!==null && loading === false &&\r\n            <List\r\n            grid={{ gutter: 16, column: 4 }}\r\n            dataSource={playlistData}\r\n            renderItem={item => (\r\n            <List.Item>\r\n                <Card title={item.name}>\r\n                    <>\r\n                    {item.description}\r\n                <Descriptions>\r\n                <Descriptions.Item label=\"Song Count\">{item.songSet.length}</Descriptions.Item> \r\n                </Descriptions>\r\n\r\n                <List\r\n                dataSource={item.songSet}    \r\n                pagination={{pageSize:2}}             \r\n                    renderItem={songItem=>(\r\n                    <List.Item> \r\n                        <Descriptions style={{marginBottom:\"-25px !important\"}} title={ songItem.name}>\r\n                                            <Descriptions.Item style={{marginTop:\"-25px !important\"}} label=\"Artist\">{songItem.artist}</Descriptions.Item>\r\n                                            <Descriptions.Item label=\"Album\">{songItem.album}</Descriptions.Item>\r\n                                            <Descriptions.Item label=\"Genre\">{songItem.genre}</Descriptions.Item>\r\n                                            <Descriptions.Item label=\"Year\"> {songItem.year}</Descriptions.Item>\r\n                                            \r\n                        </Descriptions> \r\n                    </List.Item>\r\n                   \r\n                    )}>\r\n                </List>                      \r\n                </>\r\n                \r\n                </Card>\r\n            </List.Item>\r\n            )}\r\n            \r\n            \r\n            />\r\n            }\r\n\r\n            {playlistsFetchResponse.hasError && showError  &&\r\n             <ErrorSummary error={playlistsFetchResponse.error} />\r\n            }\r\n         </Spin>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default withRouter(PetList);"]},"metadata":{},"sourceType":"module"}